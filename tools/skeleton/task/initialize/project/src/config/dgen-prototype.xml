<?xml version="1.0" encoding="UTF-8"?>
<generator_prototype xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.dima.tu-berlin.de/myriad/prototype" xsi:schemaLocation="http://www.dima.tu-berlin.de/myriad/prototype specification.xsd">

  <!-- configurable parameters -->
  <parameters>
    <!-- naming convention {generator_name}.{parameter_name} -->
    <!-- 
    <parameter key="mytype.myparameter">parameter_value</parameter>
    -->
  </parameters>

  <!-- function configuration -->
  <functions>
    <!-- supported probability types: -->
    <!--  * pareto_probability(Decimal: x_min, Decimal: alpha) -->
    <!--  * normal_probability(Decimal: mean, Decimal: stddev) -->
    <!--  * custom_discrete_probability(...) -->
    <!--
    <function key="Pr[some_probability]" type="pareto_probability">
      <argument type="Decimal" key="x_min" value="1" />
      <argument type="Decimal" key="alpha" value="1" />
    </function>
    -->
  </functions>

  <!-- enumeration types -->
  <enum_sets>
    <!-- 
    <enum_set key="CardSuit">
      <item value="Spades" />
      <item value="Hearts" />
      <item value="Diamonds" />
      <item value="Clubs" />
    </enum_set>
    -->
  </enum_sets>

  <record_sequences>
    <!-- users -->
    <random_sequence key="mytype">
      <!-- supported core types: I16, I16u, I32, I32u, I64, I64u, Decimal, String, Date -->
      <!-- supported enum types: Enum, with an additional enumref='{enum_set.key}' attribute -->
      <!-- supported ref. types: all record_sequence keys defined in this XML document -->
      <!-- 
      <record_type>
        <field name="coretype_parameter" type="I64u" />
        <field name='enumtype_parameter' type='Enum' enumref='enumset.key' />
        <reference name='ref_alias' type='othertype' />
      </record_type>
      -->
      <!-- supported cardinality estimator types: -->
      <!--  * linear_scale_estimator(I64u: base_cardinality) -->
      <!-- 
      <cardinality_estimator type="linear_scale_estimator">
        <argument key="base_cardinality" type="I64u" value="%user_connections.sequence.base_cardinality%" />
      </cardinality_estimator>
      -->
      <!-- supported hydrator types: -->
      <!--  * randomized_sequence_hydrator<RT>(RT#Setter: field, I64u: cardinality, I64u: begin, I64u: end) -->
      <!--
      <hydrators>
        <hydrator key="id_hydrator" type="randomized_sequence_hydrator">
          <argument key="field" type="field_ref" ref="id" />
          <argument key="cardinality" type="long" value="%user.sequence.cardinality%" />
        </hydrator>
      </hydrators>
      <hydration_plan>
        <hydrator_ref ref="id_hydrator" />
        <hydrator_ref ref="gender_hydrator" />
        <hydrator_ref ref="first_name_hydrator" />
      </hydration_plan>
      -->
      <!-- TODO: rename tags from 'generator_task' to 'iterator_type', no children needed  -->
      <generator_tasks>
        <generator_task key="user.generate" type="partitioned_iterator" />
      </generator_tasks>
    </random_sequence>
  </record_sequences>
</generator_prototype>