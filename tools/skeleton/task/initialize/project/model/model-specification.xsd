<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.dima.tu-berlin.de/myriad/specification" xmlns:myriad="http://www.dima.tu-berlin.de/myriad/specification"
  elementFormDefault="qualified">

  <!-- permitted root elements -->

  <xs:element name="model-specification" type="myriad:model-specification-type" />

  <xs:element name="record-types" type="myriad:record-type-type" />

  <!-- model-specification root type -->

  <xs:complexType name="model-specification-type">
    <xs:sequence>
      <xs:element name="properties" type="myriad:properties-type">
        <xs:annotation>
          <xs:documentation>A list of property values.</xs:documentation>
        </xs:annotation>
        <xs:key name="property-group-key">
          <xs:selector xpath=".//myriad:property-group" />
          <xs:field xpath="@prefix"></xs:field>
        </xs:key>
      </xs:element>
      <xs:element name="functions" type="myriad:functions-type">
        <xs:annotation>
          <xs:documentation>A list of named function definitions.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="partitioning" type="myriad:partitioning-type">
        <xs:annotation>
          <xs:documentation>The sequence partitioning configuration used for parallel execution.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="string-sets" type="myriad:string-sets-type">
        <xs:annotation>
          <xs:documentation>The sequence partitioning configuration used for parallel execution.</xs:documentation>
        </xs:annotation>
        <xs:key name="string-set-key">
          <xs:selector xpath=".//myriad:string-set" />
          <xs:field xpath="@id" />
        </xs:key>
      </xs:element>
      <xs:element name="enumerations" type="myriad:enumerations-type">
        <xs:annotation>
          <xs:documentation>The sequence partitioning configuration used for parallel execution.</xs:documentation>
        </xs:annotation>
        <xs:key name="enumeration-key">
          <xs:selector xpath=".//myriad:enumeration" />
          <xs:field xpath="@id" />
        </xs:key>
      </xs:element>
      <xs:element name="record-types" type="myriad:record-types-type">
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <!-- properties -->

  <xs:complexType name="properties-type">
    <xs:sequence>
      <xs:element name="property-group" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="property" type="myriad:property-type" maxOccurs="unbounded" />
          </xs:sequence>
          <xs:attribute name="prefix" type="xs:NCName" use="required" />
        </xs:complexType>
        <xs:key name="property-key">
          <xs:selector xpath=".//myriad:property" />
          <xs:field xpath="@name"></xs:field>
        </xs:key>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="property-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:NCName" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <!-- functions -->

  <xs:complexType name="functions-type">
    <xs:sequence>
      <xs:element name="function" type="myriad:function-type" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>

  <!-- function types -->
  <xs:complexType name="function-type" abstract="true">
    <xs:attribute name="name" type="xs:string" use="required" />
  </xs:complexType>
  <!-- custom-discrete-probability -->
  <xs:complexType name="custom-discrete-probability">
    <xs:complexContent>
      <xs:extension base="myriad:function-type">
        <xs:sequence>
          <xs:element name="probability" type="myriad:probability-point-inline" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <!-- probability points for the custom discrete probability type -->
  <xs:complexType name="probability-point-inline">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="argument" type="xs:int" use="required" />
        <xs:attribute name="value" type="xs:double" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="probability-point-context">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="function" type="xs:string" use="required" />
        <xs:attribute name="value" type="xs:double" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!-- pareto probability -->
  <xs:complexType name="pareto-probability">
    <xs:complexContent>
      <xs:extension base="myriad:function-type">
        <xs:sequence>
          <xs:element name="param" type="myriad:property-type" minOccurs="2" maxOccurs="2" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- partitioning configs -->

  <xs:complexType name="partitioning-type">
    <xs:sequence>
      <xs:element name="partition" type="myriad:partition-type" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <!-- base partition type -->
  <xs:complexType name="partition-type" abstract="true">
    <xs:attribute name="type" type="xs:NCName" use="required" />
  </xs:complexType>
  <!-- simple partitioning -->
  <xs:complexType name="partition-simple">
    <xs:complexContent>
      <xs:extension base="myriad:partition-type">
        <xs:sequence>
          <xs:element name="base-cardinality" type="xs:integer" minOccurs="1" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- string-sets -->

  <xs:complexType name="string-sets-type">
    <xs:sequence>
      <xs:element name="string-set" type="myriad:string-set-type" minOccurs="0" maxOccurs="unbounded">
        <xs:key name="string-set-entry-key">
          <xs:selector xpath=".//myriad:string" />
          <xs:field xpath="@value" />
        </xs:key>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="string-set-type">
    <xs:sequence>
      <xs:element name="string" type="myriad:string-type" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:NCName" use="required" />
  </xs:complexType>
  <xs:complexType name="string-type">
    <xs:sequence>
      <xs:element name="probability" type="myriad:probability-point-context" minOccurs="0" />
    </xs:sequence>
    <xs:attribute name="value" type="xs:string" use="required" />
  </xs:complexType>

  <!-- enumerations -->

  <xs:complexType name="enumerations-type">
    <xs:sequence>
      <xs:element name="enumeration" type="myriad:enumeration-type" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="enumeration-type">
    <xs:sequence>
      <xs:element name="value" type="xs:NCName" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:NCName" use="required" />
  </xs:complexType>

  <!-- record types -->

  <xs:complexType name="record-types-type">
    <xs:sequence>
      <xs:element name="type" type="myriad:record-type-type" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="record-type-type">
    <xs:sequence>
      <xs:element name="fields">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="field" type="myriad:field-type" maxOccurs="64" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="hydrator-chain">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="hydrator" type="myriad:hydrator-type" maxOccurs="128" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="name" type="xs:NCName" use="required" />
  </xs:complexType>
  <!-- field type -->
  <xs:complexType name="field-type">
    <xs:attribute name="name" type="xs:NCName" use="required" />
    <xs:attribute name="type" type="xs:string" use="required" />
    <xs:attribute name="references" type="xs:string" />
  </xs:complexType>
  <!-- hydrator types -->
  <xs:complexType name="hydrator-type" abstract="true">
    <xs:attribute name="field" type="xs:NCName" use="required" />
  </xs:complexType>
  <xs:complexType name="const-hydrator">
    <xs:complexContent>
      <xs:extension base="myriad:hydrator-type">
        <xs:attribute name="value" type="xs:string" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="clustered-sequence-hydrator">
    <xs:complexContent>
      <xs:extension base="myriad:hydrator-type">
        <xs:attribute name="interval-field" type="xs:NCName" />
        <xs:attribute name="cardinality" type="xs:string" />
        <xs:attribute name="probability" type="xs:string" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="clustered-reference-hydrator">
    <xs:complexContent>
      <xs:extension base="myriad:hydrator-type">
        <xs:attribute name="cluster-interval-field" type="xs:NCName" />
        <xs:attribute name="probability" type="xs:string" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="randomized-sequence-hydrator">
    <xs:complexContent>
      <xs:extension base="myriad:hydrator-type">
        <xs:attribute name="cardinality" type="xs:string" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="enum-set-hydrator">
    <xs:complexContent>
      <xs:extension base="myriad:hydrator-type">
        <xs:attribute name="probability" type="xs:string" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="static-set-hydrator">
    <xs:complexContent>
      <xs:extension base="myriad:hydrator-type">
        <xs:attribute name="set" type="xs:string" />
        <xs:attribute name="probability" type="xs:string" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="repeated-hydrator">
    <xs:complexContent>
      <xs:extension base="myriad:hydrator-type">
        <xs:sequence>
          <xs:element name="hydrator" type="myriad:hydrator-type" />
        </xs:sequence>
        <xs:attribute name="count-field" type="xs:NCName" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="conditional-hydrator">
    <xs:complexContent>
      <xs:extension base="myriad:hydrator-type">
        <xs:sequence>
          <xs:element name="if" maxOccurs="64">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="hydrator" type="myriad:hydrator-type" />
              </xs:sequence>
              <xs:attribute name="cond-value" type="xs:string" use="required" />
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="cond-field" type="xs:string" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>