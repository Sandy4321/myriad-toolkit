<?xml version="1.0" encoding="utf-8"?>
<generator_specification xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.dima.tu-berlin.de/myriad/specification" xsi:schemaLocation="http://www.dima.tu-berlin.de/myriad/specification specification.xsd">

  <!-- configurable properties -->
  <parameters>
    <!-- user properties -->
    <parameter key="user.output_file">user.json</parameter>
    <!-- user_connections properties -->
    <parameter key="user_connections.output_file">user_connections.json</parameter>
    <parameter key="user_connections.connections_cardinality">100</parameter>
    <parameter key="user_connections.cluster_size">200</parameter>
    <parameter key="user_connections.cluster_connections_factor">0.8</parameter>
  </parameters>

  <!-- function configuration -->
  <functions>
    <function key="Pr[male_name]" type="custom_discrete_probability" />
    <function key="Pr[female_name]" type="custom_discrete_probability" />
    <function key="Pr[surname]" type="custom_discrete_probability" />
    <function key="Pr[gender]" type="custom_discrete_probability" />
    <function key="Pr[uc:cluster_connection]" type="pareto_probability">
      <argument key="x_min">1</argument>
      <argument key="alpha">1</argument>
    </function>
  </functions>

  <!-- string sets -->
  <string_sets>
    <!-- us male firstnames -->
    <string_set key="male_names">
      <item value="James">
        <probability function="Pr[male_name]" value='0.0372726560947861000' />
      </item>
      <item value="John">
        <probability function="Pr[male_name]" value='0.0367004386998328000' />
      </item>
      <item value="Robert">
        <probability function="Pr[male_name]" value='0.0352642857944282000' />
      </item>
    </string_set>
  </string_sets>

  <!-- enumeration types -->
  <enumerations>
    <enumeration key="Gender">
      <item value="Male">
        <probability function="Pr[gender]" value='0.493' />
      </item>
      <item value="Female">
        <probability function="Pr[gender]" value='0.507' />
      </item>
    </enumeration>
  </enumerations>

  <record_sequences>
    <!-- users -->
    <random_sequence key="user" base_cardinality="%user_connections.sequence.base_cardinality%">
      <record_type>
        <field name="id" type="I64u" />
        <field name="gender" type="Gender" />
        <field name="first_name" type="String" />
        <field name="last_name" type="String" />
      </record_type>
      <hydrators>
        <hydrator key="id_hydrator" type="randomized_sequence_hydrator">
          <argument key="field" type="field_ref" ref="id" />
          <argument key="cardinality" type="long" value="%user.sequence.cardinality%" />
        </hydrator>
        <hydrator key="gender_hydrator" type="enum_set_hydrator">
          <argument key="field" type="field_ref" ref="id" />
          <argument key="probability" type="function_ref" ref="Pr[myriad:uniform]" />
        </hydrator>
        <hydrator key="first_name_hydrator" type="conditional_hydrator">
          <argument key="field" type="field_ref" ref="first_name" />
          <argument key="condition_field" type="field_ref" ref="gender" />
          <argument key="choices" type="map">
            <argument key="Male" type="hydrator_ref" ref="first_name_male_hydrator" />
            <argument key="Female" type="hydrator_ref" ref="first_name_female_hydrator" />
          </argument>
        </hydrator>
        <hydrator key="first_name_male_hydrator" type="static_set_hydrator">
          <argument key="field" type="field_ref" ref="first_name" />
          <argument key="set" type="set_ref" ref="male_names" />
          <argument key="probability" type="function_ref" ref="Pr[male_names]" />
        </hydrator>
        <hydrator key="first_name_female_hydrator" type="static_set_hydrator">
          <argument key="field" type="field_ref" ref="first_name" />
          <argument key="set" type="set_ref" ref="female_names" />
          <argument key="probability" type="function_ref" ref="Pr[female_names]" />
        </hydrator>
      </hydrators>
      <hydration_plan>
        <hydrator_ref ref="id_hydrator" />
        <hydrator_ref ref="gender_hydrator" />
        <hydrator_ref ref="first_name_hydrator" />
      </hydration_plan>
      <generator_tasks>
        <generator_task key="user.generate" type="partitioned_iterator" />
      </generator_tasks>
    </random_sequence>

    <!-- user connections -->
    <random_sequence key="user_connections" base_cardinality="750000">
      <record_type>
        <field name="id" type="I64u" />
        <field name="cluster_id" type="I64u" />
        <field name="cluster_interval" type="Interval" />
        <field name="connections_count" type="vector[I64u]" />
        <field name="connections" type="vector[I64u]" />
      </record_type>
      <hydrators>
        <hydrator key="id_hydrator" type="randomized_sequence_hydrator">
          <argument key="field" type="field_ref" ref="id" />
          <argument key="cardinality" type="long" value="%user_connections.sequence.cardinality%" />
        </hydrator>
        <hydrator key="connections_count_hydrator" type="const_hydrator">
          <argument key="field" type="field_ref" ref="connections_count" />
          <argument key="const_value" type="I64u" value="%user_connections.connections_count%" />
        </hydrator>
        <hydrator key="cluster_id_hydrator" type="clustered_sequence_hydrator">
          <argument key="field" type="field_ref" ref="cluster_id" />
          <argument key="interval_field" type="field_ref" ref="cluster_interval" />
          <argument key="const_value" type="I16u" value="%user_connections.connections_count%" />
          <argument key="cardinality" type="I16u" value="${%user_connections.sequence.cardinality% / %user_connections.cluster_size%}" />
          <argument key="probability" type="function_ref" ref="Pr[myriad:uniform]" />
        </hydrator>
        <hydrator key="connections_hydrator" type="repeated_hydrator">
          <argument key="field" type="field_ref" ref="connections" />
          <argument key="count_field" type="field_ref" ref="connections_count" />
          <argument key="inner_hydrator" type="hydrator_ref" />
        </hydrator>
        <hydrator key="connection_hydrator" type="clustered_reference_hydrator">
          <argument key="field" type="field_ref" ref="connections" />
          <argument key="restriction_interval_field" type="field_ref" ref="cluster_interval" />
          <argument key="probability" type="function_ref" ref="Pr[uc:cluster_connection]" />
        </hydrator>
      </hydrators>
      <hydration_plan>
        <hydrator_ref ref="id_hydrator" />
        <hydrator_ref ref="cluster_id_hydrator" />
        <hydrator_ref ref="connections_count_hydrator" />
        <hydrator_ref ref="connections_hydrator" />
      </hydration_plan>
      <generator_tasks>
      </generator_tasks>
    </random_sequence>
  </record_sequences>
</generator_specification>